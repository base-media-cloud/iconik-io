// Code generated by MockGen. DO NOT EDIT.
// Source: svc.go
//
// Generated by this command:
//
//	mockgen -source svc.go -destination=../../../../../mocks/collections_mocks/svc.go -package=collections_mocks
//
// Package collections_mocks is a generated GoMock package.
package collections_mocks

import (
	context "context"
	reflect "reflect"

	collections "github.com/base-media-cloud/pd-iconik-io-rd/internal/core/domain/iconik/assets/collections"
	gomock "go.uber.org/mock/gomock"
)

// MockServicer is a mock of Servicer interface.
type MockServicer struct {
	ctrl     *gomock.Controller
	recorder *MockServicerMockRecorder
}

// MockServicerMockRecorder is the mock recorder for MockServicer.
type MockServicerMockRecorder struct {
	mock *MockServicer
}

// NewMockServicer creates a new mock instance.
func NewMockServicer(ctrl *gomock.Controller) *MockServicer {
	mock := &MockServicer{ctrl: ctrl}
	mock.recorder = &MockServicerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockServicer) EXPECT() *MockServicerMockRecorder {
	return m.recorder
}

// GetCollection mocks base method.
func (m *MockServicer) GetCollection(ctx context.Context, path, collectionID string) (collections.CollectionDTO, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCollection", ctx, path, collectionID)
	ret0, _ := ret[0].(collections.CollectionDTO)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCollection indicates an expected call of GetCollection.
func (mr *MockServicerMockRecorder) GetCollection(ctx, path, collectionID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCollection", reflect.TypeOf((*MockServicer)(nil).GetCollection), ctx, path, collectionID)
}

// GetContents mocks base method.
func (m *MockServicer) GetContents(ctx context.Context, path, collectionID string, pageNo int) (collections.ContentsDTO, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetContents", ctx, path, collectionID, pageNo)
	ret0, _ := ret[0].(collections.ContentsDTO)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetContents indicates an expected call of GetContents.
func (mr *MockServicerMockRecorder) GetContents(ctx, path, collectionID, pageNo any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetContents", reflect.TypeOf((*MockServicer)(nil).GetContents), ctx, path, collectionID, pageNo)
}
